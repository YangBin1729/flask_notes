0.**服务器-客户端框架**

1.所有Flask程序必须创建一个程序实例，Web服务器使用**Web服务器网关接口**的协议(Web Server Gateway Interface-WSGI)，把接受自客户端的所有请求都转交给该程序实例处理: `app=Flask(__name__)`

2.程序实例需要知道对每个URL请求运行哪些代码，所以保存了一个URL到Python函数的映射关系。这种映射关系称为**路由(route)**

3.对应特定URL的函数，称为**视图函数(view functions)**。客户端访问该URL，会执行该函数。函数的返回值，称为**响应(response)**，是客户端接受到的内容。

4.URL中包含了可变部分，对应的路由称为**动态路由**；Flask会将该动态部分作为参数传入该URL对应的视图函数

5.MVC：Model-View-Controller，**模型-视图-控制器**；处理URL的视图函数就是控制器，负责业务逻辑；模板就是显示，负责显示逻辑；模型即为传给显示的变量词典

6.视图函数的返回值会自动转换为一个响应对象，包含响应体字符串、200 OK或出错代码和一个text/html类型

7.静态文件：一般为CSS和JavaScript文件。一般在文件夹'static'中，使用`url_for('static',filename='style.css')`来获取文件的URL

8.**蓝图**：是一种组织相关视图及其它代码的方式。先把视图注册到蓝图，然后在工厂函数中把蓝图注册到应用。

9.GET方法，在浏览器地址栏出现的https://www.baidu.com/s?wd=天气；request.args['wd']的值即为 天气，通过request.args.get('wd')获取

10.flask应用启动时
- 启动设置`flask run --host=0.0.0.0 --port=5001`
- 查找本机网络的IPv4地址，如 192.164.2.105
- 同一网络中的设备如手机，可以通过192.164.2.105:5001即可访问应用！